import{_ as n,e as s}from"./app.625aa393.js";const a={},t=s(`<h2 id="_1-asynctask-\u7684\u4ECB\u7ECD\u53CA\u9002\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#_1-asynctask-\u7684\u4ECB\u7ECD\u53CA\u9002\u7528\u573A\u666F" aria-hidden="true">#</a> 1. <code>AsyncTask</code> \u7684\u4ECB\u7ECD\u53CA\u9002\u7528\u573A\u666F</h2><p><code>AsyncTask</code> \u662F\u4E00\u79CD\u8F7B\u91CF\u7EA7\u7684\u5F02\u6B65\u4EFB\u52A1\u7C7B\u3002\u901A\u8FC7 <code>AsyncTask</code> \u53EF\u4EE5\u5C06\u4EFB\u52A1\u63D0\u4EA4\u5230\u7EBF\u7A0B\u6C60\u4E2D\u6267\u884C\uFF0C\u7136\u540E\u628A\u6267\u884C\u7684\u8FDB\u5EA6\u548C\u6700\u7EC8\u7684\u7ED3\u679C\u4F20\u9012\u7ED9\u4E3B\u7EBF\u7A0B\u53BB\u66F4\u65B0 <code>UI</code>\u3002</p><p>\u4ECE\u5B9E\u73B0\u4E0A\u770B\uFF0C<code>AsyncTask</code> \u5C01\u88C5\u4E86 <code>Thread</code> \u548C <code>Handler</code>\u3002</p><p><code>AsyncTask</code> \u5E76\u4E0D\u9002\u5408\u8FDB\u884C\u7279\u522B\u8017\u65F6\u7684\u540E\u53F0\u4EFB\u52A1\uFF0C\u5BF9\u4E8E\u7279\u522B\u8017\u65F6\u7684\u4EFB\u52A1\u6765\u8BF4\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u7EBF\u7A0B\u6C60\u3002</p><h2 id="_2-asynctask-\u7684-3-\u4E2A\u6CDB\u578B\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_2-asynctask-\u7684-3-\u4E2A\u6CDB\u578B\u53C2\u6570" aria-hidden="true">#</a> 2. <code>AsyncTask</code> \u7684 <code>3</code> \u4E2A\u6CDB\u578B\u53C2\u6570</h2><p><code>AsyncTask</code> \u662F\u4E00\u4E2A\u62BD\u8C61\u7684\u6CDB\u578B\u7C7B\uFF0C\u58F0\u660E\u4E86\u4E09\u4E2A\u6CDB\u578B\u53C2\u6570\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Progress</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre></div><h3 id="_2-1-params" tabindex="-1"><a class="header-anchor" href="#_2-1-params" aria-hidden="true">#</a> 2.1 <code>Params</code></h3><p>\u8868\u793A\u63D0\u4EA4\u548C\u5904\u7406\u4EFB\u52A1\u65F6\uFF0C\u6240\u4F20\u5165\u7684\u53C2\u6570\u7684\u7C7B\u578B\u3002</p><ol><li><p>\u901A\u8FC7\u8C03\u7528 <code>execute(Params... params)</code> \u65B9\u6CD5\u6216 <code>executeOnExecutor(Executor exec, Params... params)</code> \u65B9\u6CD5\u63D0\u4EA4\u4EFB\u52A1\u3002</p></li><li><p>\u901A\u8FC7\u56DE\u8C03 <code>doInBackground(Params... params)</code> \u65B9\u6CD5\u6267\u884C\u4EFB\u52A1\u3002</p></li></ol><h3 id="_2-2-progress" tabindex="-1"><a class="header-anchor" href="#_2-2-progress" aria-hidden="true">#</a> 2.2 <code>Progress</code></h3><p>\u8868\u793A\u4EFB\u52A1\u7684\u6267\u884C\u8FDB\u5EA6\u503C\u7684\u7C7B\u578B\u3002</p><ol><li><p>\u9700\u8981\u5728\u91CD\u5199\u7684 <code>doInBackground</code> \u65B9\u6CD5\u4E2D\uFF0C\u4E3B\u52A8\u8C03\u7528 <code>publishProgress(Progress... values)</code> \u66F4\u65B0\u8FDB\u5EA6\u3002</p></li><li><p>\u6BCF\u8C03\u7528\u4E00\u6B21 <code>publishProgress</code> \u65B9\u6CD5\uFF0C\u90FD\u4F1A\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u56DE\u8C03\u4E00\u6B21 <code>onProgressUpdate(Progress... values)</code> \u65B9\u6CD5\u3002\u4E8E\u662F\uFF0C\u91CD\u5199 <code>onProgressUpdate</code> \u65B9\u6CD5\uFF0C\u5C06\u4F20\u5165\u7684\u53C2\u6570\u8FDB\u5EA6\u503C\u66F4\u65B0\u5728 <code>UI</code> \u4E2D\u5373\u53EF\u3002</p></li></ol><h3 id="_2-3-result" tabindex="-1"><a class="header-anchor" href="#_2-3-result" aria-hidden="true">#</a> 2.3 <code>Result</code></h3><p>\u8868\u793A\u4EFB\u52A1\u7684\u7ED3\u679C\u6570\u636E\u7684\u7C7B\u578B\u3002</p><ol><li><p>\u91CD\u5199 <code>Result doInBackground(Params... params)</code> \u65B9\u6CD5\u65F6\uFF0C\u9700\u8981\u8FD4\u56DE\u4EFB\u52A1\u7684\u7ED3\u679C\u6570\u636E\u3002</p></li><li><p><code>doInBackground</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u6570\u636E\u4F1A\u56DE\u8C03\u7ED9 <code>onPostExecute(Result result)</code> \u65B9\u6CD5\u3002<code>onPostExecute</code> \u65B9\u6CD5\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u6267\u884C\uFF0C\u4E8E\u662F\u91CD\u5199 <code>onPostExecute</code> \u65B9\u6CD5\u65F6\uFF0C\u53EF\u4EE5\u5C06\u4F20\u5165\u7684\u7ED3\u675F\u6570\u636E\u66F4\u65B0\u5230 <code>UI</code> \u4E2D\u3002</p></li></ol><h2 id="_3-asynctask-\u7684-4-\u4E2A\u6838\u5FC3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-asynctask-\u7684-4-\u4E2A\u6838\u5FC3\u65B9\u6CD5" aria-hidden="true">#</a> 3. <code>AsyncTask</code> \u7684 <code>4</code> \u4E2A\u6838\u5FC3\u65B9\u6CD5</h2><h3 id="_3-1-onpreexecute" tabindex="-1"><a class="header-anchor" href="#_3-1-onpreexecute" aria-hidden="true">#</a> 3.1 <code>onPreExecute()</code></h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPreExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>1. \u5728\u4E3B\u7EBF\u7A0B\u4E2D\u6267\u884C\u3002
2. \u5728 doInBackground \u65B9\u6CD5\u6267\u884C\u4E4B\u524D\u8C03\u7528\uFF0C\u7528\u6765\u505A\u4E00\u4E9B\u51C6\u5907\u5DE5\u4F5C\u3002
</code></pre></div><h3 id="_3-2-doinbackground-params-params" tabindex="-1"><a class="header-anchor" href="#_3-2-doinbackground-params-params" aria-hidden="true">#</a> 3.2 <code>doInBackground(Params... params)</code></h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@WorkerThread</span>
<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token class-name">Result</span> <span class="token function">doInBackground</span><span class="token punctuation">(</span><span class="token class-name">Params</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>1. \u5728\u5B50\u7EBF\u7A0B\u4E2D\u6267\u884C\u3002
2. \u7528\u6765\u5904\u7406\u4E00\u4E2A\u5177\u4F53\u7684\u7EBF\u7A0B\u4EFB\u52A1\u3002
3. \u91CD\u5199\u6B64\u65B9\u6CD5\u65F6\uFF0C\u8C03\u7528 publishProgress \u65B9\u6CD5\u53EF\u66F4\u65B0\u4EFB\u52A1\u7684\u6267\u884C\u8FDB\u5EA6\u3002\u8C03\u7528 publishProgress \u65B9\u6CD5\u540E\u4F1A\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u56DE\u8C03 onProgressUpdate \u65B9\u6CD5\u3002
4. \u9700\u8981\u8FD4\u56DE\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\u7684\u7ED3\u679C\u6570\u636E\u3002\u8FD4\u56DE\u7684\u7ED3\u679C\u6570\u636E\u4F1A\u56DE\u8C03\u7ED9\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u6267\u884C\u7684 onPostExecute \u65B9\u6CD5\u3002
</code></pre></div><h3 id="_3-3-onprogressupdate-progress-values" tabindex="-1"><a class="header-anchor" href="#_3-3-onprogressupdate-progress-values" aria-hidden="true">#</a> 3.3 <code>onProgressUpdate(Progress...values)</code></h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onProgressUpdate</span><span class="token punctuation">(</span><span class="token class-name">Progress</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>1. \u5728\u4E3B\u7EBF\u7A0B\u4E2D\u6267\u884C\u3002
2. \u7528\u4E8E\u5904\u7406\u4F20\u5165\u7684\u4EFB\u52A1\u6267\u884C\u8FDB\u5EA6\u503C\u3002\u5982\u663E\u793A\u5728 UI \u4E2D\u3002
</code></pre></div><h3 id="_3-4-onpostexecute-result-result" tabindex="-1"><a class="header-anchor" href="#_3-4-onpostexecute-result-result" aria-hidden="true">#</a> 3.4 <code>onPostExecute(Result result)</code></h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPostExecute</span><span class="token punctuation">(</span><span class="token class-name">Result</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>1. \u5728\u4E3B\u7EBF\u7A0B\u4E2D\u6267\u884C\u3002
2. \u5728 doInBackground \u65B9\u6CD5\u6267\u884C\u4E4B\u540E\u8C03\u7528\uFF0C\u7528\u6765\u5904\u7406\u4EFB\u52A1\u5B8C\u6210\u540E\u7684\u6536\u5C3E\u5DE5\u4F5C\u3002
</code></pre></div><h2 id="_4-asynctask-\u53D6\u6D88\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_4-asynctask-\u53D6\u6D88\u4EFB\u52A1" aria-hidden="true">#</a> 4. <code>AsyncTask</code> \u53D6\u6D88\u4EFB\u52A1</h2><h3 id="_4-1-\u8C03\u7528-cancel-\u65B9\u6CD5\u53D6\u6D88\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_4-1-\u8C03\u7528-cancel-\u65B9\u6CD5\u53D6\u6D88\u4EFB\u52A1" aria-hidden="true">#</a> 4.1 \u8C03\u7528 <code>cancel</code> \u65B9\u6CD5\u53D6\u6D88\u4EFB\u52A1</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token comment">/*
    mayInterruptIfRunning \u4E3A true \u8868\u793A\u5141\u8BB8\u4E2D\u65AD\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1
*/</span>
<span class="token keyword">boolean</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> mayInterruptIfRunning<span class="token punctuation">)</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>\u4E00\u4E2A AsyncTask \u5BF9\u8C61\u53EA\u80FD\u63D0\u4EA4\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u8C03\u7528 cancel \u65B9\u6CD5\u6709\u5982\u4E0B\u51E0\u79CD\u60C5\u51B5\uFF1A
1. \u5982\u679C AsyncTask \u63D0\u4EA4\u7684\u4EFB\u52A1\u5DF2\u7ECF\u6267\u884C\u5B8C\u4E86\uFF0C\u90A3\u4E48 cancel \u65B9\u6CD5\u4F1A\u8FD4\u56DE false\u3002
2. \u5982\u679C AsyncTask \u63D0\u4EA4\u7684\u4EFB\u52A1\u8FD8\u6CA1\u6709\u6267\u884C\uFF0C\u90A3\u4E48\u5C31\u4E0D\u4F1A\u518D\u6267\u884C\u3002
3. \u5982\u679C AsyncTask \u63D0\u4EA4\u7684\u4EFB\u52A1\u6B63\u5728\u6267\u884C\uFF0C\u90A3\u4E48\uFF1A
    1. \u5F53\u53C2\u6570 mayInterruptIfRunning \u4E3A false \u65F6\uFF0C\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1\u4F1A\u7EE7\u7EED\u6267\u884C\u5B8C\uFF1B
    2. \u5F53\u53C2\u6570 mayInterruptIfRunning \u4E3A true \u65F6\uFF0C\u4F1A\u5411\u4EFB\u52A1\u6240\u5728\u7684\u7EBF\u7A0B\u53D1\u51FA\u4E2D\u65AD\u3002 

\u6CE8\u610F\uFF1A
1. \u8C03\u7528 cancel \u65B9\u6CD5\u540E\uFF0C\u5982\u679C\u4EFB\u52A1\u6B63\u5728\u6267\u884C\uFF0C\u90A3\u4E48 doInBackground \u6267\u884C\u5B8C\u540E\uFF0C
    \u4E0D\u4F1A\u518D\u56DE\u8C03 onPostExecute \u65B9\u6CD5\uFF0C\u800C\u662F\u56DE\u8C03 onCancelled \u65B9\u6CD5\u3002
2. \u5728 doInBackground \u65B9\u6CD5\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7 isCancelled() \u65B9\u6CD5\u5224\u65AD\u4EFB\u52A1\u662F\u5426\u53D6\u6D88\u4E86\u3002
    \u5BF9\u4E8E\u53D6\u6D88\u4E86\u7684\u4EFB\u52A1\uFF0C\u5E94\u8BE5\u5C3D\u5FEB\u5730\u7ED3\u675F doInBackground \u65B9\u6CD5\u7684\u6267\u884C\u3002
</code></pre></div><h3 id="_4-2-\u4EFB\u53D6\u53D6\u6D88\u540E\u7684\u56DE\u8C03-oncancelled" tabindex="-1"><a class="header-anchor" href="#_4-2-\u4EFB\u53D6\u53D6\u6D88\u540E\u7684\u56DE\u8C03-oncancelled" aria-hidden="true">#</a> 4.2 \u4EFB\u53D6\u53D6\u6D88\u540E\u7684\u56DE\u8C03 <code>onCancelled()</code></h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token comment">/*
    \u4EFB\u52A1\u53D6\u6D88\u540E\uFF0C\u4E0D\u4F1A\u56DE\u8C03 onPostExecute(Result result) \u4E86\uFF0C
    \u5982\u679C\u60F3\u5F97\u5230\u53D6\u6D88\u540E\u7684\u4EFB\u52A1\u7684\u7ED3\u679C\uFF0C\u53EF\u4EE5\u91CD\u5199 onCancelled(Result result) \u65B9\u6CD5
*/</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCancelled</span><span class="token punctuation">(</span><span class="token class-name">Result</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">onCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCancelled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><h2 id="_5-asynctask-\u5728\u4F7F\u7528\u65F6\u7684\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#_5-asynctask-\u5728\u4F7F\u7528\u65F6\u7684\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> 5. <code>AsyncTask</code> \u5728\u4F7F\u7528\u65F6\u7684\u6CE8\u610F\u4E8B\u9879</h2><p><code>AsyncTask</code> \u5728\u4F7F\u7528\u65F6\u7684\u6CE8\u610F\u4E8B\u9879\u5982\u4E0B\uFF1A</p><ol><li><p><code>AsyncTask</code> \u5BF9\u8C61\u5FC5\u987B\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u521B\u5EFA\u3002</p></li><li><p><code>AsyncTask</code> \u5BF9\u8C61\u7684 <code>execute</code> \u65B9\u6CD5\u548C <code>executeOnExecutor</code> \u65B9\u6CD5\u5FC5\u987B\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u8C03\u7528\u3002</p></li><li><p>\u4E00\u4E2A <code>AsyncTask</code> \u5BF9\u8C61\u53EA\u80FD\u6267\u884C\u4E00\u6B21\u7EBF\u7A0B\u4EFB\u52A1\u3002\u5373\u4E00\u4E2A <code>AsyncTask</code> \u5BF9\u8C61\u7684 <code>execute</code> \u65B9\u6CD5\u6216 <code>executeOnExecutor</code> \u65B9\u6CD5\u53EA\u80FD\u88AB\u5F00\u53D1\u8005\u4E3B\u52A8\u8C03\u7528\u4E00\u6B21\uFF0C\u5426\u5219\u4F1A\u62A5\u5F02\u5E38\u3002</p></li><li><p><code>onPreExecute</code>\u3001<code>doInBackground</code>\u3001<code>onProgressUpdate</code>\u3001<code>onPostExecute</code>\u3001<code>onCancelled</code> \u8FD9\u4E9B\u65B9\u6CD5\u90FD\u53EA\u662F\u5728 <code>AsyncTask</code> \u5185\u90E8\u88AB\u52A8\u56DE\u8C03\u7684\u65B9\u6CD5\uFF0C\u5F00\u53D1\u8005\u4E0D\u80FD\u4E3B\u52A8\u8C03\u7528\u5B83\u4EEC\u3002</p></li><li><p>\u5728\u540C\u4E00\u4E2A\u8FDB\u7A0B\u4E2D\uFF0C\u6240\u6709\u8C03\u7528 <code>execute</code> \u65B9\u6CD5\u7684\u5404\u4E2A <code>AsyncTask</code> \u5BF9\u8C61\u662F\u4E32\u884C\u6267\u884C\u4EFB\u52A1\u7684\u3002</p><blockquote><p>\u5373\uFF1A\u540C\u4E00\u8FDB\u7A0B\uFF0C\u540C\u4E00\u65F6\u95F4\uFF0C\u5BF9\u4E8E\u8C03\u7528 <code>execute</code> \u65B9\u6CD5\u5F00\u59CB\u6267\u884C\u7EBF\u7A0B\u4EFB\u52A1\u7684\u6240\u6709 <code>AsyncTask</code> \u5BF9\u8C61\u7684\u96C6\u5408\u4E2D\uFF0C\u53EA\u6709\u4E00\u4E2A <code>AsyncTask</code> \u5BF9\u8C61\u5728\u6267\u884C\u7EBF\u7A0B\u4EFB\u52A1\u3002</p></blockquote></li><li><p>\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <code>executeOnExecutor</code> \u65B9\u6CD5\u6765\u5E76\u884C\u5730\u6267\u884C\u4EFB\u52A1\u3002</p></li></ol><h3 id="_5-1-\u901A\u8FC7-execute-\u65B9\u6CD5\u4E32\u884C\u6267\u884C\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_5-1-\u901A\u8FC7-execute-\u65B9\u6CD5\u4E32\u884C\u6267\u884C\u4EFB\u52A1" aria-hidden="true">#</a> 5.1 \u901A\u8FC7 <code>execute</code> \u65B9\u6CD5\u4E32\u884C\u6267\u884C\u4EFB\u52A1</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token comment">/*
    \u53EA\u662F\u7B80\u5355\u5730\u5C06\u4EFB\u52A1 runnable \u653E\u5165\u5230\u7EBF\u7A0B\u6C60 sDefaultExecutor \u4E2D\u6267\u884C\uFF0C
    \u4EFB\u52A1\u6CA1\u6709\u8F93\u5165\u7684\u53C2\u6570\uFF0C\u4E5F\u6CA1\u6709\u8FD4\u56DE\u7684\u7ED3\u679C\u3002
    \u4E0D\u4F1A\u56DE\u8C03 onPreExecute\u3001doInBackground\u3001onProgressUpdate\u3001onPostExecute \u8FD9\u4E9B\u65B9\u6CD5
    \u65E0\u6CD5\u901A\u8FC7\u8C03\u7528 cancel \u65B9\u6CD5\u53D6\u6D88\u4EFB\u52A1\uFF0C\u4E5F\u4E0D\u4F1A\u56DE\u8C03 onCancelled \u65B9\u6CD5
*/</span>
<span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sDefaultExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>runnable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
    \u6784\u5EFA\u4E00\u4E2A mFuture \u4EFB\u52A1\u653E\u5165\u5230\u7EBF\u7A0B\u6C60 sDefaultExecutor \u4E2D\u6267\u884C\u3002
    \u4EFB\u52A1\u53EF\u4EE5\u8F93\u5165\u53C2\u6570 params\uFF0C\u4E5F\u6709\u8FD4\u56DE\u7ED3\u679C\u3002
    \u4F1A\u56DE\u8C03 onPreExecute\u3001doInBackground\u3001onProgressUpdate\u3001onPostExecute \u8FD9\u4E9B\u65B9\u6CD5
    \u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 cancel \u65B9\u6CD5\u53D6\u6D88\u4EFB\u52A1\uFF0C\u5E76\u4F1A\u56DE\u8C03 onCancelled \u65B9\u6CD5
*/</span>
<span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">AsyncTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Progress</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Params</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">executeOnExecutor</span><span class="token punctuation">(</span>sDefaultExecutor<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_5-2-\u901A\u8FC7-executeonexecutor-\u65B9\u6CD5\u5E76\u884C\u6267\u884C\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_5-2-\u901A\u8FC7-executeonexecutor-\u65B9\u6CD5\u5E76\u884C\u6267\u884C\u4EFB\u52A1" aria-hidden="true">#</a> 5.2 \u901A\u8FC7 <code>executeOnExecutor</code> \u65B9\u6CD5\u5E76\u884C\u6267\u884C\u4EFB\u52A1</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token comment">/*
    \u4E0E execute(Params... params) \u65B9\u6CD5\u7684\u533A\u522B\u662F\uFF1AexecuteOnExecutor \u65B9\u6CD5\u53EF\u4EE5\u4F20\u5165\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60 exec\u3002
    execute \u65B9\u6CD5\u4E2D\uFF0CsDefaultExecutor \u53D8\u91CF\u5F15\u7528\u7684\u662F SERIAL_EXECUTOR \u7EBF\u7A0B\u6C60\uFF0C\u901A\u8FC7\u8BE5\u7EBF\u7A0B\u6C60\u53EA\u80FD\u4E32\u884C\u6267\u884C\u4EFB\u52A1\uFF0C
    \u800C executeOnExecutor \u65B9\u6CD5\u5141\u8BB8\u4F20\u5165\u4E00\u4E2A\u53EF\u4EE5\u5E76\u884C\u6267\u884C\u4EFB\u52A1\u7684\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60\u3002
*/</span>
<span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">AsyncTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Progress</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token function">executeOnExecutor</span><span class="token punctuation">(</span><span class="token class-name">Executor</span> exec<span class="token punctuation">,</span> <span class="token class-name">Params</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mStatus <span class="token operator">!=</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>mStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">RUNNING</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot execute task:&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; the task is already running.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">FINISHED</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot execute task:&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; the task has already been executed &quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot;(a task can be executed only once)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    mStatus <span class="token operator">=</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">RUNNING</span><span class="token punctuation">;</span>

    <span class="token function">onPreExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    mWorker<span class="token punctuation">.</span>mParams <span class="token operator">=</span> params<span class="token punctuation">;</span>

    exec<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>mFuture<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="_5-asynctask-\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_5-asynctask-\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> 5. <code>AsyncTask</code> \u6E90\u7801\u5206\u6790</h2><h3 id="_5-1-serial-executor-\u7EBF\u7A0B\u6C60-thread-pool-executor-\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_5-1-serial-executor-\u7EBF\u7A0B\u6C60-thread-pool-executor-\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 5.1 <code>SERIAL_EXECUTOR</code> \u7EBF\u7A0B\u6C60 &amp; <code>THREAD_POOL_EXECUTOR</code> \u7EBF\u7A0B\u6C60</h3><p><code>SERIAL_EXECUTOR</code> \u7EBF\u7A0B\u6C60\u7684\u76F8\u5173\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">Executor</span> sDefaultExecutor <span class="token operator">=</span> <span class="token constant">SERIAL_EXECUTOR</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Executor</span> <span class="token constant">SERIAL_EXECUTOR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SerialExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SerialExecutor</span> <span class="token keyword">implements</span> <span class="token class-name">Executor</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> mTasks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Runnable</span> mActive<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mTasks<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token function">scheduleNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>mActive <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">scheduleNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">scheduleNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mActive <span class="token operator">=</span> mTasks<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">THREAD_POOL_EXECUTOR</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>mActive<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>SERIAL_EXECUTOR \u7EBF\u7A0B\u6C60\u7684\u4F5C\u7528\u53EA\u662F\u5C06\u4EFB\u52A1\u5B58\u5165\u5230 ArrayDeque \u961F\u5217\u4E2D\uFF0C\u5E76\u9010\u4E2A\u5730\u53D6\u51FA\u6765\u518D\u63D0\u4EA4\u7ED9 THREAD_POOL_EXECUTOR \u7EBF\u7A0B\u6C60\u6267\u884C\u3002
\u901A\u8FC7 SERIAL_EXECUTOR \u7EBF\u7A0B\u6C60\u4FDD\u8BC1\u4E86 execute \u65B9\u6CD5\u63D0\u4EA4\u7684\u4EFB\u52A1\u80FD\u591F\u4E32\u884C\u5730\u6267\u884C\u3002
</code></pre></div><p><code>THREAD_POOL_EXECUTOR</code> \u7EBF\u7A0B\u6C60\u7684\u76F8\u5173\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token comment">// CPU \u6838\u5FC3\u6570</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CPU_COUNT</span> <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u6570 = CPU \u6838\u5FC3\u6570 + 1</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CORE_POOL_SIZE</span> <span class="token operator">=</span> <span class="token constant">CPU_COUNT</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// \u6700\u5927\u7EBF\u7A0B\u6570 = CPU \u6838\u5FC3\u6570 x 2 + 1</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">MAXIMUM_POOL_SIZE</span> <span class="token operator">=</span> <span class="token constant">CPU_COUNT</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">KEEP_ALIVE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EFB\u52A1\u961F\u5217\u7684\u5BB9\u91CF\u4E3A 128</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> sPoolWorkQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadFactory</span> sThreadFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> mCount <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Thread</span> <span class="token function">newThread</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token string">&quot;AsyncTask #&quot;</span> <span class="token operator">+</span> mCount<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u65E0\u8D85\u65F6\u673A\u5236</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Executor</span> <span class="token constant">THREAD_POOL_EXECUTOR</span> 
        <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token constant">CORE_POOL_SIZE</span><span class="token punctuation">,</span> <span class="token constant">MAXIMUM_POOL_SIZE</span><span class="token punctuation">,</span>
                                 <span class="token constant">KEEP_ALIVE</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span> <span class="token comment">// \u975E\u6838\u5FC3\u7EBF\u7A0B\u7684\u7A7A\u95F2\u8D85\u65F6\u65F6\u957F\u4E3A 1s\u3002</span>
                                 sPoolWorkQueue<span class="token punctuation">,</span> 
                                 sThreadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_5-2-\u901A\u8FC7-futuretask-\u548C-callable-\u5B9E\u73B0\u4EFB\u52A1\u7684\u53C2\u6570\u4F20\u5165\u548C\u7ED3\u679C\u8FD4\u56DE" tabindex="-1"><a class="header-anchor" href="#_5-2-\u901A\u8FC7-futuretask-\u548C-callable-\u5B9E\u73B0\u4EFB\u52A1\u7684\u53C2\u6570\u4F20\u5165\u548C\u7ED3\u679C\u8FD4\u56DE" aria-hidden="true">#</a> 5.2 \u901A\u8FC7 <code>FutureTask</code> \u548C <code>Callable</code> \u5B9E\u73B0\u4EFB\u52A1\u7684\u53C2\u6570\u4F20\u5165\u548C\u7ED3\u679C\u8FD4\u56DE</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mWorker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WorkerRunnable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
            mTaskInvoked<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Result</span> result <span class="token operator">=</span> <span class="token function">doInBackground</span><span class="token punctuation">(</span>mParams<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token function">postResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    mFuture <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mWorker<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">postResultIfNotInvoked</span><span class="token punctuation">(</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">CancellationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">postResultIfNotInvoked</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">WorkerRunnable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">Params</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mParams<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>\u521B\u5EFA AsyncTask \u5B9E\u4F8B\u65F6\uFF0C\u5728 AsyncTask \u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u5C31\uFF1A
1. new \u4E86\u4E00\u4E2A Callable \u5BF9\u8C61 mWorker\uFF1B
2. new \u4E86\u4E00\u4E2A FutureTask \u5BF9\u8C61 mFuture\u3002

\u901A\u8FC7 mWorker \u53EF\u4EE5\u4F20\u5165\u4EFB\u52A1\u9700\u8981\u7684\u53C2\u6570\uFF08\u89C1\u4E0B\u9762\u7684 executeOnExecutor \u65B9\u6CD5\uFF09
mWorker.call() \u4F1A\u5728 mFuture \u7684 run \u65B9\u6CD5\u4E2D\u6267\u884C\u3002\uFF08FutureTask \u5B9E\u73B0\u4E86 Runnable \u63A5\u53E3\uFF09
mWorker.call() \u65B9\u6CD5\u4E2D\u8C03\u7528 doInBackground \u65B9\u6CD5\u5904\u7406\u4EFB\u52A1\u3002
doInBackground \u65B9\u6CD5\u8FD4\u56DE\u7684\u7ED3\u679C\u4F1A\u901A\u8FC7\u4E3B\u7EBF\u7A0B\u4E2D\u7684 Handler \u56DE\u8C03\u7ED9 AsyncTask.onPostExecute \u65B9\u6CD5\u3002
</code></pre></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@MainThread</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">AsyncTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Params</span><span class="token punctuation">,</span> <span class="token class-name">Progress</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&gt;</span></span> <span class="token function">executeOnExecutor</span><span class="token punctuation">(</span><span class="token class-name">Executor</span> exec<span class="token punctuation">,</span> <span class="token class-name">Params</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    mStatus <span class="token operator">=</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">RUNNING</span><span class="token punctuation">;</span>

    <span class="token function">onPreExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    mWorker<span class="token punctuation">.</span>mParams <span class="token operator">=</span> params<span class="token punctuation">;</span> <span class="token comment">// \u901A\u8FC7 mWorker \u53EF\u4EE5\u4F20\u5165\u4EFB\u52A1\u9700\u8981\u7684\u53C2\u6570</span>

    exec<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>mFuture<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mFuture \u5B9E\u73B0\u4E86 Runnable \u63A5\u53E3\uFF0C\u4F5C\u4E3A\u4E00\u4E2A\u4EFB\u52A1\u63D0\u4EA4\u5230\u7EBF\u7A0B\u6C60 exec \u4E2D\u3002</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,53);function e(p,o){return t}var l=n(a,[["render",e],["__file","asynctask.html.vue"]]);export{l as default};
